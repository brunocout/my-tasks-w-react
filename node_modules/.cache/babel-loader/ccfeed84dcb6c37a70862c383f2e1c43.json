{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bruno\\\\Desktop\\\\Dev\\\\curso-react\\\\src\\\\App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport axios from \"axios\";\nimport './App.css';\nimport AddTask from \"./components/addTask\";\nimport Tasks from \"./components/Tasks\";\nimport Header from \"./components/header\";\nimport TaskDetails from \"./components/TaskDetails\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const {\n        data\n      } = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10');\n      setTasks(data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleTaskClick = taskId => {\n    const newTasks = tasks.map(task => {\n      if (task.id === taskId) return { ...task,\n        completed: !task.completed\n      };\n      return task;\n    });\n    setTasks(newTasks);\n  };\n\n  const handleTaskAddition = taskTitle => {\n    const newTask = [...tasks, {\n      title: taskTitle,\n      id: uuidv4(),\n      completed: false\n    }];\n    setTasks(newTask);\n  };\n\n  const handleTaskDeletion = taskId => {\n    const newTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(newTasks);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        render: () => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AddTask, {\n            handleTaskAddition: handleTaskAddition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n            tasks: tasks,\n            handleTaskClick: handleTaskClick,\n            handleTaskDeletion: handleTaskDeletion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:taskTitle\",\n        exact: true,\n        component: TaskDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"K0CGY9ktPASNMM1f7siwSwExNkU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/bruno/Desktop/Dev/curso-react/src/App.jsx"],"names":["React","useEffect","useState","v4","uuidv4","BrowserRouter","Router","Route","axios","AddTask","Tasks","Header","TaskDetails","App","tasks","setTasks","fetchTasks","data","get","handleTaskClick","taskId","newTasks","map","task","id","completed","handleTaskAddition","taskTitle","newTask","title","handleTaskDeletion","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,EAAE,IAAIC,MAAd,QAA2B,MAA3B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,KAAjC,QAA6C,kBAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,WAAP;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,EAAD,CAAlC;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMe,UAAU,GAAG,YAAY;AAC7B,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMT,KAAK,CAACU,GAAN,CAAU,oDAAV,CAAvB;AAEAH,MAAAA,QAAQ,CAACE,IAAD,CAAR;AACD,KAJD;;AAMAD,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMG,eAAe,GAAIC,MAAD,IAAY;AAChC,UAAMC,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACrC,UAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAhB,EAAwB,OAAO,EAAC,GAAGG,IAAJ;AAAUE,QAAAA,SAAS,EAAE,CAACF,IAAI,CAACE;AAA3B,OAAP;AAEtB,aAAOF,IAAP;AACD,KAJgB,CAAjB;AAKAR,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAPD;;AASA,QAAMK,kBAAkB,GAAIC,SAAD,IAAe;AACxC,UAAMC,OAAO,GAAG,CAAC,GAAGd,KAAJ,EACd;AACEe,MAAAA,KAAK,EAAEF,SADT;AAEEH,MAAAA,EAAE,EAAEpB,MAAM,EAFZ;AAGEqB,MAAAA,SAAS,EAAE;AAHb,KADc,CAAhB;AAOAV,IAAAA,QAAQ,CAACa,OAAD,CAAR;AACD,GATD;;AAWA,QAAME,kBAAkB,GAAIV,MAAD,IAAY;AACnC,UAAMC,QAAQ,GAAGP,KAAK,CAACiB,MAAN,CAAaR,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,MAAjC,CAAjB;AAEAL,IAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,GAJD;;AAMA,sBACE,QAAC,MAAD;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,KAAK,MAArB;AAAsB,QAAA,MAAM,EAAE,mBAC1B;AAAA,kCACI,QAAC,OAAD;AAAS,YAAA,kBAAkB,EAAEK;AAA7B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,KAAD;AAAO,YAAA,KAAK,EAAEZ,KAAd;AAAqB,YAAA,eAAe,EAAEK,eAAtC;AAAuD,YAAA,kBAAkB,EAAEW;AAA3E;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eASE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,aAAZ;AAA0B,QAAA,KAAK,MAA/B;AAAgC,QAAA,SAAS,EAAElB;AAA3C;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1DD;;GAAMC,G;;KAAAA,G;AA4DN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport {v4 as uuidv4} from \"uuid\"\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport axios from \"axios\"\n\nimport './App.css'\nimport AddTask from \"./components/addTask\"\nimport Tasks from \"./components/Tasks\"\nimport Header from \"./components/header\"\nimport TaskDetails from \"./components/TaskDetails\"\n\nconst App = () => {\n  const [tasks, setTasks] = useState([\n    \n  ])\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const { data } = await axios.get('https://jsonplaceholder.cypress.io/todos?_limit=10')\n\n      setTasks(data)\n    }\n\n    fetchTasks()\n  }, [])\n\n  const handleTaskClick = (taskId) => {\n      const newTasks = tasks.map((task) => {\n      if (task.id === taskId) return {...task, completed: !task.completed}\n      \n        return task\n      })\n      setTasks(newTasks)  \n  }\n\n  const handleTaskAddition = (taskTitle) => {\n    const newTask = [...tasks,\n      {\n        title: taskTitle,\n        id: uuidv4(),\n        completed: false\n      }\n    ]\n    setTasks(newTask)\n  }\n\n  const handleTaskDeletion = (taskId) => {\n      const newTasks = tasks.filter(task => task.id !== taskId)\n\n      setTasks(newTasks)\n  }\n\n  return ( \n    <Router> \n      <div className=\"container\">\n        <Header />\n        <Route path=\"/\" exact render={() => (\n            <>\n                <AddTask handleTaskAddition={handleTaskAddition}  />\n                <Tasks tasks={tasks} handleTaskClick={handleTaskClick} handleTaskDeletion={handleTaskDeletion}/>\n            </>\n          )}\n        />\n        <Route path=\"/:taskTitle\" exact component={TaskDetails}/>\n      </div>\n    </Router> \n  )\n  \n  \n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}